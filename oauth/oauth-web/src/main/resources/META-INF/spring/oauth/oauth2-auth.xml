<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:sec="http://www.springframework.org/schema/security" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:oauth2="http://www.springframework.org/schema/security/oauth2" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/jdbc
           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
           http://www.springframework.org/schema/security/oauth2
           http://www.springframework.org/schema/security/spring-security-oauth2.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <oauth2:authorization-server
        client-details-service-ref="clientDetailsService"
        user-approval-handler-ref="userApprovalHandler"
        token-services-ref="tokenServices">
        <oauth2:authorization-code authorization-code-services-ref="authorizationCodeServices"/>
        <oauth2:refresh-token />
    </oauth2:authorization-server>

    <sec:http pattern="/oauth/*token*/**"
        authentication-manager-ref="clientAuthenticationManager">
        <sec:http-basic entry-point-ref="oauthAuthenticationEntryPoint" />
        <sec:csrf disabled="true"/>
        <sec:custom-filter ref="clientVerificationFilter" after="BASIC_AUTH_FILTER "/>
        <sec:intercept-url pattern="/**" access="isAuthenticated()"/>
    </sec:http>
    
    <sec:authentication-manager id="clientAuthenticationManager">
        <sec:authentication-provider user-service-ref="clientDetailsUserService" >
        <sec:password-encoder ref="passwordEncoder"/>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="typeName" value="Basic" />
        <property name="realmName" value="Realm" />
    </bean>
    
    <bean id="clientVerificationFilter" class="server.app.extension.AuthorizationCodeClientVerificationFilter">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="clientDetailsUserService"
        class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetailsService" />
    </bean>

    <bean id="userApprovalHandler"
        class="org.springframework.security.oauth2.provider.approval.ApprovalStoreUserApprovalHandler">
        <property name="clientDetailsService" ref="clientDetailsService"/>
        <property name="approvalStore" ref="approvalStore"/>
        <property name="requestFactory" ref="requestFactory"/>
        <property name="approvalExpiryInSeconds" value="3200" />
    </bean>

    <bean id="approvalStore"
        class="org.springframework.security.oauth2.provider.approval.JdbcApprovalStore"> 
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="requestFactory"
        class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
        <constructor-arg ref="clientDetailsService"/>
    </bean>

    <bean id="authorizationCodeServices"
        class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="tokenServices"
        class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">  <!-- (2) -->
        <property name="tokenStore" ref="tokenStore" />
        <property name="clientDetailsService" ref="clientDetailsService" />
        <property name="supportRefreshToken" value="true" />  <!-- (3) -->
    </bean>

    <bean id="tokenStore"
      class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore"> <!-- (4) -->
      <constructor-arg ref="dataSource" />
    </bean>

    <tx:advice id="oauthTransactionAdvice">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="authorizationOperation"
                      expression="execution(* org.springframework.security.oauth2.provider.code.AuthorizationCodeServices.*(..))"/>
        <aop:pointcut id="approvalOperation"
                      expression="execution(* org.springframework.security.oauth2.provider.approval.UserApprovalHandler.*(..))"/>
        <aop:advisor pointcut-ref="authorizationOperation" advice-ref="oauthTransactionAdvice"/>
        <aop:advisor pointcut-ref="approvalOperation" advice-ref="oauthTransactionAdvice"/>
    </aop:config>

</beans>